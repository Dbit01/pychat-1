version: '2.3'
services:
  db:
    image: mysql/mysql-server
    environment:
      MYSQL_ROOT_PASSWORD: 'Ilovepython'
      MYSQL_DATABASE: 'pychat'
      MYSQL_USER: 'pychat'
      MYSQL_PASSWORD: 'pypass'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 3s
      interval: 5s
      retries: 10
      start_period: 50s
    volumes:
      - ./volumes/mysql:/var/lib/mysql
  server:
    build:
      context: ../
      dockerfile: ./docker/Dockerfileserver
    command:
       bash -c "rm -f /tmp/socket/uwsgi.sock && python manage.py init_db && python manage.py sync_db && uwsgi --ini /usr/src/chat-uwsgi.ini"
    healthcheck:
      test:  bash -c "[ -S /tmp/socket/uwsgi.sock ]"
      start_period: 50s
      retries: 5
      interval: 3s
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./volumes/migrations:/usr/src/chat/migrations
      - ./volumes/photos:/usr/src/photos
      - socket:/tmp/socket
      - static:/usr/src/chat/static

  redis:
    image: redis:alpine
    volumes:
      - ./volumes/redis:/data
  nginx:
    build:
      context: ../
      dockerfile: ./docker/Dockerfilenginx
    volumes:
      - socket:/tmp/socket:ro
      - ./volumes/photos/:/srv/http/photos:ro
      - static:/srv/http/static:ro
    ports:
     - 8000:443
    depends_on:
      ws:
        condition: service_healthy
  ws:
    build:
      context: ../
      dockerfile: ./docker/Dockerfilewebsocket
    depends_on:
      server:
        condition: service_healthy
    command:
      python manage.py start_tornado
    healthcheck:
      test: sh -c "[ '`curl -s http://localhost:8888/test`' = 'ok' ]"
      timeout: 3s
      interval: 5s
      retries: 10
      start_period: 50s
volumes:
   socket:
   static: