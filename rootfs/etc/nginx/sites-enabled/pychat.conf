server {
       listen         80;
       server_name    pychat.org;
       return         301 https://$server_name$request_uri;
}

upstream tornado {
    server 127.0.0.1:8883;
    server 127.0.0.1:8882;
}

server {

    server_name pychat.org static.pychat.org;
    if ($host !~* ^(pychat.org|www.pychat.org|static.pychat.org|www.static.pychat.org)$ ) {
       return 444;
    }

    listen 443 ssl;

    ssl_certificate /etc/nginx/ssl/certificate.crt;
    ssl_certificate_key  /etc/nginx/ssl/server.key;

    charset     utf-8;
    client_max_body_size 500M;

    add_header X-Frame-Options SAMEORIGIN;
    # add_header Strict-Transport-Security "max-age=31536000";

    gzip on;
    gzip_static on;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied  any;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;

    location /ws {
         proxy_pass                      http://tornado/;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "upgrade";
         proxy_set_header Host $host;
         proxy_send_timeout 3600;
         proxy_read_timeout 3600;
         proxy_http_version 1.1;
         proxy_set_header X-Real-IP $remote_addr;
    }

    location /api {
         proxy_pass  http://tornado/;
    }

    location /photo  {
         alias /srv/http/pychat/photos;
    }

    location ~ "^/photo/(?<filepath>\w{8}_(?<filename>.*))$"  {
        add_header Content-Disposition 'inline; filename="$filename"';
        alias /srv/http/pychat/photos/$filepath;
    }

    root /srv/http/pychat/fe/dist/;

    location / {
        try_files $uri /index.html;
        add_header Access-Control-Allow-Origin https://pychat.org;
    }

}
